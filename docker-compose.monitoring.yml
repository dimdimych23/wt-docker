services:
  
  nginx-proxy:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./websoft/certs/wt.local:/etc/nginx/certs:ro
    depends_on:
      web-backend-1:
        condition: service_started
      web-backend-2:
        condition: service_started
      worker-backend:
        condition: service_started
      vclass-media:
        condition: service_started
    networks:
      - wt-net
  
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: wt
      POSTGRES_PASSWORD: wt_password
      POSTGRES_DB: wt
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wt"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - wt-net
  
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wt-net
  
  redis:
    image: redis:7.2-alpine
    restart: always
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - wt-net

  minio:
    image: minio/minio@sha256:d249d1fb6966de4d8ad26c04754b545205ff15a62e4fd19ebd0f26fa5baacbc0
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      ROOT_USER__MINIO: ${ROOT_USER__MINIO}
      ROOT_PASSWORD__MINIO: ${ROOT_PASSWORD__MINIO}
    volumes:
      - minio-data:/data
      - ./minio/certs:/root/.minio/certs:ro
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI (Console)
    networks:
      - wt-net

  # --- сервис: читает из MinIO (S3) и шлёт в Loki ---
  logstash:
    build:
      context: ./monitoring/logstash
    restart: always
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx512m"
      S3_SERVICE_URL: ${S3_SERVICE_URL}
      S3_ACCESS_KEY_ID: ${S3_LOGS_RO_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_LOGS_RO_SECRET_ACCESS_KEY}
      BUCKET_LOGS: ${BUCKET_LOGS}
      LOKI_SERVICE_URL: ${LOKI_SERVICE_URL}
      LOKI_JOB_LABEL: ${LOKI_JOB_LABEL}
      ROLE_FALLBACK: ${ROLE_FALLBACK}
      ENV_FALLBACK: ${ENV_FALLBACK}
      LOG_TYPE_FALLBACK: ${LOG_TYPE_FALLBACK}
    volumes:
      - ./monitoring/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - logstash-data:/usr/share/logstash/data     # ПЕРСИСТЕНТНЫЕ очереди/DLQ/sincedb
    depends_on:
      minio: { condition: service_started }
      loki:  { condition: service_started }
    networks: [wt-net]
        
  loki:
    image: grafana/loki:2.9.3
    user: root
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./monitoring/loki/loki-config.yaml:/etc/loki/config.yaml
      - loki-data:/loki
    networks:
      - wt-net
  
  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: change_me
      GF_USERS_ALLOW_SIGN_UP: "false"
    networks:
      - wt-net

  web-backend-1:
    image: websoft/hcm:2025.2.1212
    platform: linux/amd64
    hostname: wt_dev
    restart: always
    tty: true
    stdin_open: true
    command: ["/bin/sh","-lc","/WebsoftServer/init-vfs.sh"]
    environment:
      - NodesPoolId=1
      - ExternalDeployment=true
      - MEMORY_MIMALLOC=2
      - RoleType=0
      - S3_SERVICE_URL=${S3_SERVICE_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE}
      - S3_TIMEOUT=${S3_TIMEOUT}
      - S3_TRUSTED_CA_PATH=${S3_TRUSTED_CA_PATH}
      - BUCKET_WEBTUTOR=${BUCKET_WEBTUTOR}
      - BUCKET_SPXML_BLOBS=${BUCKET_SPXML_BLOBS}
      - BUCKET_APPLICATIONS=${BUCKET_APPLICATIONS}
      - BUCKET_FTIDX=${BUCKET_FTIDX}
      - BUCKET_LOGS=${BUCKET_LOGS}
      - BUCKET_LOCATION_LOG=${BUCKET_LOCATION_LOG__WEB_1}
    volumes:
      # конфигурационные файлы Websoft HCM
      - ./websoft/configs/common/license.xfpx:/WebsoftServer/license.xfpx # лицензия
      - ./websoft/configs/common/resource_sec.json:/WebsoftServer/resource_sec.json
      - ./websoft/configs/common/xHttp.ini:/WebsoftServer/xHttp.ini 
      - ./websoft/configs/web-backend/spxml_unibridge_config.xml:/WebsoftServer/spxml_unibridge_config.xml
      - ./websoft/configs/web-backend/xhttp_config.json:/WebsoftServer/xhttp_config.json
      # конфигурация и сертификат для VFS
      - ./websoft/configs/common/vfs_config.json.template:/WebsoftServer/configs/vfs_config.json.template:ro # шаблон VFS-конфигурации
      - ./websoft/configs/common/init-vfs.sh:/WebsoftServer/init-vfs.sh:ro  # скрипт инициализации VFS
      - ./websoft/certs/minio/minio-rootCA.pem:/WebsoftServer/certs/minio/minio-rootCA.pem:ro  # если нужен сертификат MinIO
      # рабочие директории Websoft HCM
      - ./websoft/platform.runtime:/WebsoftServer/platform.runtime  
      - ./websoft/components.runtime:/WebsoftServer/components.runtime
      - ./websoft/wt_data:/WebsoftServer/wt_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >
          wget -q --spider http://localhost:8011/spxml_web/main.htm || exit 1
      interval: 10s
      timeout: 5s
      start_period: 90s
      retries: 12
    networks:
      - wt-net
  
  web-backend-2:
    image: websoft/hcm:2025.2.1212
    platform: linux/amd64
    hostname: wt_dev
    restart: always
    tty: true
    stdin_open: true
    command: ["/bin/sh","-lc","/WebsoftServer/init-vfs.sh"]
    environment:
      - NodesPoolId=1
      - ExternalDeployment=true
      - MEMORY_MIMALLOC=2
      - RoleType=0
      - S3_SERVICE_URL=${S3_SERVICE_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE}
      - S3_TIMEOUT=${S3_TIMEOUT}
      - S3_TRUSTED_CA_PATH=${S3_TRUSTED_CA_PATH}
      - BUCKET_WEBTUTOR=${BUCKET_WEBTUTOR}
      - BUCKET_SPXML_BLOBS=${BUCKET_SPXML_BLOBS}
      - BUCKET_APPLICATIONS=${BUCKET_APPLICATIONS}
      - BUCKET_FTIDX=${BUCKET_FTIDX}
      - BUCKET_LOGS=${BUCKET_LOGS}
      - BUCKET_LOCATION_LOG=${BUCKET_LOCATION_LOG__WEB_2}
    volumes:
      # конфигурационные файлы Websoft HCM
      - ./websoft/configs/common/license.xfpx:/WebsoftServer/license.xfpx # лицензия
      - ./websoft/configs/common/resource_sec.json:/WebsoftServer/resource_sec.json
      - ./websoft/configs/common/xHttp.ini:/WebsoftServer/xHttp.ini 
      - ./websoft/configs/web-backend/spxml_unibridge_config.xml:/WebsoftServer/spxml_unibridge_config.xml
      - ./websoft/configs/web-backend/xhttp_config.json:/WebsoftServer/xhttp_config.json
      # конфигурация и сертификат для VFS
      - ./websoft/configs/common/vfs_config.json.template:/WebsoftServer/configs/vfs_config.json.template:ro # шаблон VFS-конфигурации
      - ./websoft/configs/common/init-vfs.sh:/WebsoftServer/init-vfs.sh:ro  # скрипт инициализации VFS
      - ./websoft/certs/minio/minio-rootCA.pem:/WebsoftServer/certs/minio/minio-rootCA.pem:ro  # если нужен сертификат MinIO
      # рабочие директории Websoft HCM
      - ./websoft/platform.runtime:/WebsoftServer/platform.runtime  
      - ./websoft/components.runtime:/WebsoftServer/components.runtime
      - ./websoft/wt_data:/WebsoftServer/wt_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >
          wget -q --spider http://localhost:8011/spxml_web/main.htm || exit 1
      interval: 10s
      timeout: 5s
      start_period: 90s
      retries: 12
    networks:
      - wt-net

  vclass-media:
    image: websoft/hcm:2025.2.1212
    platform: linux/amd64
    hostname: wt_dev
    restart: always
    ports:
      - "20000-20009:20000-20009/udp" # для прода исправить на "20000-20999:20000-20999/udp"
      - "20000-20009:20000-20009/tcp" # для прода исправить на "20000-20999:20000-20999/tcp"
    tty: true
    stdin_open: true
    command: ["/bin/sh", "/entrypoint-vclass-media.sh"]
    environment:
      - NodesPoolId=1
      - ExternalDeployment=true
      - MEMORY_MIMALLOC=2
      - RoleType=0
      - S3_SERVICE_URL=${S3_SERVICE_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE}
      - S3_TIMEOUT=${S3_TIMEOUT}
      - S3_TRUSTED_CA_PATH=${S3_TRUSTED_CA_PATH}
      - BUCKET_WEBTUTOR=${BUCKET_WEBTUTOR}
      - BUCKET_SPXML_BLOBS=${BUCKET_SPXML_BLOBS}
      - BUCKET_APPLICATIONS=${BUCKET_APPLICATIONS}
      - BUCKET_FTIDX=${BUCKET_FTIDX}
      - BUCKET_LOGS=${BUCKET_LOGS}
      - BUCKET_LOCATION_LOG=${BUCKET_LOCATION_LOG__VCLASS_MEDIA}
    volumes:
      # конфигурационные файлы Websoft HCM
      - ./websoft/configs/common/license.xfpx:/WebsoftServer/license.xfpx # лицензия
      - ./websoft/configs/common/resource_sec.json:/WebsoftServer/resource_sec.json
      - ./websoft/configs/common/xHttp.ini:/WebsoftServer/xHttp.ini 
      - ./websoft/configs/vclass-media/spxml_unibridge_config.xml:/WebsoftServer/spxml_unibridge_config.xml
      - ./websoft/configs/vclass-media/xhttp_config.json:/WebsoftServer/xhttp_config.json
      - ./websoft/configs/vclass-media/mediasoup_config.json:/WebsoftServer/mediasoup_config.json
      - ./websoft/configs/vclass-media/entrypoint-vclass-media.sh:/entrypoint-vclass-media.sh:ro
      # конфигурация и сертификат для VFS
      - ./websoft/configs/common/vfs_config.json.template:/WebsoftServer/configs/vfs_config.json.template:ro # шаблон VFS-конфигурации
      - ./websoft/configs/common/init-vfs.sh:/WebsoftServer/init-vfs.sh:ro  # скрипт инициализации VFS
      - ./websoft/certs/minio/minio-rootCA.pem:/WebsoftServer/certs/minio/minio-rootCA.pem:ro  # если нужен сертификат MinIO
      # рабочие директории Websoft HCM
      - ./websoft/platform.runtime:/WebsoftServer/platform.runtime  
      - ./websoft/components.runtime:/WebsoftServer/components.runtime
      - ./websoft/wt_data:/WebsoftServer/wt_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >
          wget -q --spider http://localhost:8011/spxml_web/main.htm || exit 1
      interval: 10s
      timeout: 5s
      start_period: 90s
      retries: 12
    networks:
      - wt-net

  vclass-recorder:
    image: websoft/recorder:1.25.03.20
    platform: linux/amd64
    restart: always
    tty: true
    stdin_open: true
    expose:
      - "8300"
    volumes:
      - ./websoft/configs/vclass-recorder/config.json:/Websoft.Recording/config/config.json:ro
      - ./websoft/configs/vclass-recorder/certs/recorder.pfx:/Websoft.Recording/certs/recorder.pfx:ro
      - ./websoft/Logs/vclass-recorder:/Websoft.Recording/logs
      - ./websoft/records:/Websoft.Recording/records
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wt-net
  
  worker-backend:
    image: websoft/hcm:2025.2.1212
    platform: linux/amd64
    hostname: wt_dev
    restart: always
    tty: true
    stdin_open: true
    command: ["/bin/sh","-lc","/WebsoftServer/init-vfs.sh"]
    environment:
      - NodesPoolId=3
      - ExternalDeployment=true
      - MEMORY_MIMALLOC=2
      - RoleType=1
      - S3_SERVICE_URL=${S3_SERVICE_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE}
      - S3_TIMEOUT=${S3_TIMEOUT}
      - S3_TRUSTED_CA_PATH=${S3_TRUSTED_CA_PATH}
      - BUCKET_WEBTUTOR=${BUCKET_WEBTUTOR}
      - BUCKET_SPXML_BLOBS=${BUCKET_SPXML_BLOBS}
      - BUCKET_APPLICATIONS=${BUCKET_APPLICATIONS}
      - BUCKET_FTIDX=${BUCKET_FTIDX}
      - BUCKET_LOGS=${BUCKET_LOGS}
      - BUCKET_LOCATION_LOG=${BUCKET_LOCATION_LOG__WORKER}
    volumes:
      # конфигурационные файлы Websoft HCM
      - ./websoft/configs/common/license.xfpx:/WebsoftServer/license.xfpx # лицензия
      - ./websoft/configs/common/resource_sec.json:/WebsoftServer/resource_sec.json
      - ./websoft/configs/common/xHttp.ini:/WebsoftServer/xHttp.ini 
      - ./websoft/configs/worker-backend/spxml_unibridge_config.xml:/WebsoftServer/spxml_unibridge_config.xml
      - ./websoft/configs/worker-backend/xhttp_config.json:/WebsoftServer/xhttp_config.json
      # конфигурация и сертификат для VFS
      - ./websoft/configs/common/vfs_config.json.template:/WebsoftServer/configs/vfs_config.json.template:ro # шаблон VFS-конфигурации
      - ./websoft/configs/common/init-vfs.sh:/WebsoftServer/init-vfs.sh:ro  # скрипт инициализации VFS
      - ./websoft/certs/minio/minio-rootCA.pem:/WebsoftServer/certs/minio/minio-rootCA.pem:ro  # если нужен сертификат MinIO
      # рабочие директории Websoft HCM
      - ./websoft/platform.runtime:/WebsoftServer/platform.runtime  
      - ./websoft/components.runtime:/WebsoftServer/components.runtime
      - ./websoft/wt_data:/WebsoftServer/wt_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        - CMD-SHELL
        - >
          wget -q --spider http://localhost:8011/spxml_web/main.htm || exit 1
      interval: 10s
      timeout: 5s
      start_period: 90s
      retries: 12
    networks:
      - wt-net

networks:
  wt-net:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
  redis-data:
  grafana-data:
  loki-data:
  minio-data:
  logstash-data: