events {}

http {
    map $http_upgrade $connection_upgrade { 
        default upgrade;
        ''      close;
    }

    # Upstreams
    upstream web-backend {
        least_conn;
        server web-backend-1:8011;
        server web-backend-2:8011;
    }

    upstream worker-backend {
        server worker-backend:8011;
    }

    upstream vclass-media {
        server vclass-media:8011;
    }

    upstream vclass-recorder {
        server vclass-recorder:8443;
    }

    # HTTP redirect for wt
    server {
        listen 80;
        listen [::]:80;
        server_name wt;

        location = / { 
            return 301 https://$host/default; 
        }
        location / {
            return 301 https://$host$request_uri; 
        }
    }

    # HTTP redirect for wt-vclass.local
    server {
        listen 80;
        listen [::]:80;
        server_name wt-vclass.local;

        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Worker backend (доступ только локально)
    server {
        listen 81;
        location / {
            proxy_pass http://worker-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_buffering off;
        }
    }

    # HTTPS: основной портал
    server {
        listen 443 ssl http2;
        server_name wt;

        ssl_certificate     /etc/nginx/certs/wt+2.pem;
        ssl_certificate_key /etc/nginx/certs/wt+2-key.pem;

        client_max_body_size 0;

        location = / {
            return 302 https://$host/default;
        }

        location / {
            proxy_pass http://web-backend;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_403 http_404 http_429;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 
            proxy_read_timeout 3600;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location = /favicon.ico { return 204; }
    }

    # HTTPS: медиасервер виртуальных классов
    server {
        listen 443 ssl http2;
        server_name wt-vclass.local;

        ssl_certificate     /etc/nginx/certs/wt+2.pem;
        ssl_certificate_key /etc/nginx/certs/wt+2-key.pem;

        location / {
            proxy_pass http://vclass-media;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 3600;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_buffering off;
        }
    }

    # HTTP -> HTTPS redirect
    server {
        listen 80;
        server_name wt-recorder.local;
        return 301 https://$host$request_uri;
    }

    # HTTPS: сервер записи виртуальных классов
    server {
        listen 443 ssl http2;
        server_name wt-recorder.local;

        ssl_certificate     /etc/nginx/certs/wt+2.pem;
        ssl_certificate_key /etc/nginx/certs/wt+2-key.pem;

        location / {
            proxy_pass https://vclass-recorder;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # TLS к upstream
            proxy_ssl_server_name on;
            proxy_ssl_verify off;  # локально можно off; в проде — включить и доверять CA
        }
    }

}