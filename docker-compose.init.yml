services:
  
  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: wt
      POSTGRES_PASSWORD: wt_password
      POSTGRES_DB: wt
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wt"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - wt-net

  minio:
    image: minio/minio@sha256:d249d1fb6966de4d8ad26c04754b545205ff15a62e4fd19ebd0f26fa5baacbc0
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web UI (Console)
    volumes:
      - minio-data:/data
      - ./minio/certs:/root/.minio/certs:ro
    networks:
      - wt-net

  minio-mc-init:
    image: minio/mc@sha256:fb8f773eac8ef9d6da0486d5dec2f42f219358bcb8de579d1623d518c9ebd4cc
    depends_on:
      minio:
        condition: service_started
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      S3_SERVICE_URL: ${S3_SERVICE_URL}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_LOGS_RO_ACCESS_KEY_ID: ${S3_LOGS_RO_ACCESS_KEY_ID}
      S3_LOGS_RO_SECRET_ACCESS_KEY: ${S3_LOGS_RO_SECRET_ACCESS_KEY}
      BUCKET_WEBTUTOR_PUBLIC: ${BUCKET_WEBTUTOR_PUBLIC}      
      BUCKET_WEBTUTOR: ${BUCKET_WEBTUTOR}
      BUCKET_SPXML_BLOBS: ${BUCKET_SPXML_BLOBS}
      BUCKET_APPLICATIONS: ${BUCKET_APPLICATIONS}
      BUCKET_FTIDX: ${BUCKET_FTIDX}
      BUCKET_LOGS: ${BUCKET_LOGS}
      BUCKET_RECORDS: ${BUCKET_RECORDS}
    volumes:
      - ./minio/minio-mc-init.sh:/init.sh:ro
      - ./minio/policies:/policies:ro
    entrypoint: ["/bin/sh", "/init.sh"]
    restart: "no"
    networks:
      - wt-net
  
  redis:
    image: redis:7.2-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - wt-net
  
  web-backend-init:
    image: websoft/hcm:2025.2.1212
    platform: linux/amd64
    hostname: wt_dev
    restart: always
    tty: true
    stdin_open: true
    command: ["/bin/sh","-lc","/WebsoftServer/init-vfs.sh"]
    environment:
      - NodesPoolId=1
      - ExternalDeployment=true
      - MEMORY_MIMALLOC=2
      - RoleType=0
      - S3_SERVICE_URL=${S3_SERVICE_URL}
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_FORCE_PATH_STYLE=${S3_FORCE_PATH_STYLE}
      - S3_TIMEOUT=${S3_TIMEOUT}
      - S3_TRUSTED_CA_PATH=${S3_TRUSTED_CA_PATH}
      - BUCKET_WEBTUTOR=${BUCKET_WEBTUTOR}
      - BUCKET_SPXML_BLOBS=${BUCKET_SPXML_BLOBS}
      - BUCKET_APPLICATIONS=${BUCKET_APPLICATIONS}
      - BUCKET_FTIDX=${BUCKET_FTIDX}
      - BUCKET_LOGS=${BUCKET_LOGS}
      - LOG_LOCATION=${LOG_LOCATION_WEB_INIT}
    ports:
      - "81:8011"
    volumes:
      # конфигурационные файлы Websoft HCM
      - ./websoft/configs/common/license.xfpx:/WebsoftServer/license.xfpx:ro # лицензия
      - ./websoft/configs/common/resource_sec.json:/WebsoftServer/resource_sec.json:ro
      - ./websoft/configs/common/xHttp.ini:/WebsoftServer/xHttp.ini:ro
      - ./websoft/configs/web-backend-init/spxml_unibridge_config.xml:/WebsoftServer/spxml_unibridge_config.xml:ro
      - ./websoft/configs/web-backend-init/xhttp_config.json:/WebsoftServer/xhttp_config.json:ro
      # конфигурация и сертификат для VFS
      - ./websoft/configs/common/vfs_config.json.template:/WebsoftServer/configs/vfs_config.json.template:ro # шаблон VFS-конфигурации
      - ./websoft/configs/common/init-vfs.sh:/WebsoftServer/init-vfs.sh:ro  # скрипт инициализации VFS
      - ./websoft/certs/minio/minio-rootCA.pem:/WebsoftServer/certs/minio/minio-rootCA.pem:ro  # если нужен сертификат MinIO
      # рабочие директории Websoft HCM
      - ./websoft/platform.runtime:/WebsoftServer/platform.runtime  
      - ./websoft/components.runtime:/WebsoftServer/components.runtime
      - ./websoft/wt_data:/WebsoftServer/wt_data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio-mc-init:
        condition: service_completed_successfully
    networks:
      - wt-net
  
networks:
  wt-net:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  minio-data: